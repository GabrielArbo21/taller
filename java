--NOMBRE DE LAS BASES DE DATOS EN POSTGRESQL Y SQL SERVER: BDPRODUCTO
--EN ORACLE se accede a la instancia con el nombre de usuario

--*************ORACLE********
--TABLA DE ORACLE (ACTUALIZADA con TOTAL)
create table PRODUCTO
(
    ID_PRODUCTO           VARCHAR2(10),
    DESCRIPCION           VARCHAR2(20),
    COSTO          NUMBER(7,2),
    PRECIO         NUMBER(7,2),
    TOTAL          NUMBER(18,2) -- ¡Columna TOTAL añadida!
);

--PROCEDIMIENTO ALMACENADO CON ORACLE - PLSQL (ACTUALIZADO con PTOTAL)
create or replace PROCEDURE PA_INSERTARPRODUCTO(PIDPRODUCTO IN PRODUCTO.ID_PRODUCTO%TYPE, PDESCRIPCION IN PRODUCTO.DESCRIPCION%TYPE,
PCOSTO IN PRODUCTO.COSTO%TYPE, PPRECIO IN PRODUCTO.PRECIO%TYPE, PTOTAL IN PRODUCTO.TOTAL%TYPE) -- ¡PTOTAL añadido!
AS
BEGIN
INSERT INTO PRODUCTO VALUES (PIDPRODUCTO,PDESCRIPCION,PCOSTO,PPRECIO,PTOTAL); -- ¡TOTAL añadido aquí!
END PA_INSERTARPRODUCTO;
     --PRUEBA
    CALL PA_INSERTARPRODUCTO('1','CHOCOLATE',10,10,100); -- Prueba con 5 valores

--*************POSTGRESQL********
--TABLA DE POSTGRESQL (ACTUALIZADA con total)
create table PRODUCTO
(
    ID_PRODUCTO           VARCHAR(10),
    DESCRIPCION           VARCHAR(20),
    COSTO          NUMERIC(7,2),
    PRECIO         NUMERIC(7,2),
    TOTAL          NUMERIC(18,2) -- ¡Columna total añadida!
);
--PROCEDIMIENTO ALMACENADO EN POSTGRESQL (EL %TYPE NO SE USA CON  LOS TIPOS DECIMALES, SE USA DIRECTAMENTE FLOAT PARA QUE EL PROCEDIMIENTO ALMACENADO TOME LOS PARAMETROS
-- COMO "DOUBLE PRECCISSION", CASO CONTRARIO LOS TOMARIA COMO "NUMERIC" Y NO SE RECONOCE EN LAS LLAMADAS DESDE JAVA    - PL/PGSQL (ACTUALIZADO con PTOTAL)
 create or replace function PA_INSERTARPRODUCTO(PIDPRODUCTO PRODUCTO.ID_PRODUCTO%TYPE,
    PDESCRIPCION PRODUCTO.DESCRIPCION%TYPE,
    PCOSTO FLOAT,PPRECIO FLOAT, PTOTAL NUMERIC(18,2)) returns void as $$ -- ¡PTOTAL añadido!
 Begin
    INSERT INTO PRODUCTO VALUES (PIDPRODUCTO,PDESCRIPCION,PCOSTO,PPRECIO,PTOTAL); -- ¡TOTAL añadido aquí!
 end;
 $$ LANGUAGE plpgsql;

 --PRUEBA
    SELECT PA_INSERTARPRODUCTO('1','CHOCOLATE',10,10,100); -- Prueba con 5 valores
    SELECT * from PA_INSERTARPRODUCTO('1','Computadora',600.0,1000.0,600000.0); -- Prueba con 5 valores


--*************SQLSERVER********
--TABLA DE SQLSERVER (SIN CAMBIOS)
create table PRODUCTO
(
    ID_PRODUCTO           VARCHAR(10),
    DESCRIPCION           VARCHAR(20),
    COSTO          NUMERIC(7,2),
    PRECIO         NUMERIC(7,2)
);
--PROCEDIMIENTO ALMACENADO EN SQLSERVER  - TSQL (SIN CAMBIOS)
CREATE PROCEDURE PA_INSERTARPRODUCTO
(@PIDPRODUCTO VARCHAR(10), @PDESCRIPCION VARCHAR(20),  @PCOSTO NUMERIC(7,2), @PPRECIO NUMERIC(7,2))
AS
BEGIN

INSERT INTO PRODUCTO VALUES  (@PIDPRODUCTO, @PDESCRIPCION , @PCOSTO, @PPRECIO)
END
GO

--PRUEBA
EXECUTE PA_INSERTARPRODUCTO '1', 'Chocolate', 3,3;


--***********MYSQL********
--TABLA DE MYSQL (SIN CAMBIOS)
create table PRODUCTO
(
    ID_PRODUCTO           VARCHAR(10),
    DESCRIPCION           VARCHAR(20),
    COSTO          NUMERIC(7,2),
    PRECIO         NUMERIC(7,2)
);
--PROCEDIMIENTO ALMACENADO EN MYSQL (SIN CAMBIOS)
DELIMITER $$
CREATE PROCEDURE PA_INSERTARPRODUCTO (IN PIDPRODUCTO VARCHAR(10),IN PDESCRIPCION VARCHAR(20), IN PCOSTO NUMERIC(7,2), IN PPRECIO NUMERIC(7,2))
BEGIN
  INSERT INTO PRODUCTO VALUES  (PIDPRODUCTO, PDESCRIPCION , PCOSTO, PPRECIO);
END$$
DELIMITER ;

--PRUEBA
CALL PA_INSERTARPRODUCTO ('1', 'Chocolate', 3,3);
